
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://uzdtqomtbrccinrkhzme.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InV6ZHRxb210YnJjY2lucmtoem1lIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY2NzY5MTIsImV4cCI6MjA2MjI1MjkxMn0.Fh8z-GRcM84tBoiSSeFE21Vhqho9rUfgC8e0jiZMOl0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create a custom type that extends Database to include additional tables
interface CustomDatabase extends Database {
  public: Database['public'] & {
    Tables: Database['public']['Tables'] & {
      flashcards: {
        Row: {
          id: string;
          front: string;
          back: string;
          deckId: string;
          difficulty: string;
          nextReview: Date;
          lastReviewed?: Date;
          reviewCount?: number;
          deck_id: string;
        };
        Insert: {
          id?: string;
          front: string;
          back: string;
          deckId?: string;
          difficulty: string;
          nextReview: Date;
          lastReviewed?: Date;
          reviewCount?: number;
          deck_id: string;
        };
        Update: {
          id?: string;
          front?: string;
          back?: string;
          deckId?: string;
          difficulty?: string;
          nextReview?: Date;
          lastReviewed?: Date;
          reviewCount?: number;
          deck_id?: string;
        };
      };
      decks: {
        Row: {
          id: string;
          title: string;
          description: string;
          userId?: string;
          updatedAt: Date;
          color: string;
          cardCount: number;
          dueCards: number;
          newCards: number;
          user_id?: string;
          class_title?: string;
        };
        Insert: {
          id?: string;
          title: string;
          description: string;
          userId?: string;
          updatedAt?: Date;
          color: string;
          cardCount: number;
          dueCards: number;
          newCards: number;
          user_id?: string;
          class_title?: string;
        };
        Update: {
          id?: string;
          title?: string;
          description?: string;
          userId?: string;
          updatedAt?: Date;
          color?: string;
          cardCount?: number;
          dueCards?: number;
          newCards?: number;
          user_id?: string;
          class_title?: string;
        };
      };
      api_keys: {
        Row: {
          id: string;
          key_name: string;
          key_value: string;
          user_id: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          key_name: string;
          key_value: string;
          user_id: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          key_name?: string;
          key_value?: string;
          user_id?: string;
          created_at?: string;
          updated_at?: string;
        };
      };
      embeddings: {
        Row: {
          id: string;
          content: string;
          embedding: any;
          user_id?: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          content: string;
          embedding: any;
          user_id?: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          content?: string;
          embedding?: any;
          user_id?: string;
          created_at?: string;
        };
      };
      quizzes: {
        Row: {
          id: string;
          title: string;
          description: string;
          question_count: number;
          time_estimate: number;
          difficulty: string;
          coverage: string;
          created_at: string;
          updated_at: string;
          user_id?: string;
          class_title?: string;
        };
        Insert: {
          id?: string;
          title: string;
          description: string;
          question_count: number;
          time_estimate: number;
          difficulty: string;
          coverage: string;
          created_at?: string;
          updated_at?: string;
          user_id?: string;
          class_title?: string;
        };
        Update: {
          id?: string;
          title?: string;
          description?: string;
          question_count?: number;
          time_estimate?: number;
          difficulty?: string;
          coverage?: string;
          created_at?: string;
          updated_at?: string;
          user_id?: string;
          class_title?: string;
        };
      };
    };
  };
}

export const supabase = createClient<CustomDatabase>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true
    }
  }
);
